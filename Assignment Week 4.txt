object Exercise1 {val a = 42.354562
val b = 3
println("Rounded Value of a is " + "%.2f".format(a).toDouble)
println("B with Zero Padding is " + "%04d".format(b))}



object Exercise2 {
   def factorial(n: BigInt): BigInt = {  
      if (n <= 1)
         1  
      else    
      n * factorial(n - 1)
   }
}

println(Exercise2.factorial(6))
println(Exercise2.factorial(8))
println(Exercise2.factorial(24))
println(Exercise2.factorial(10))


object Exercise3_1 {
    def test(n: Double): Double = {  
   val n = n:Double.toInt
      }
}

object Exercise3_2 {
    def factorial(n: BigInt): BigInt = {  
      Exercise3_1.test(n)
      if (n <= 1)
         1  
      else    
      n * factorial(n - 1)};
   }
}

println(Exercise3_2.factorial(4.3))
println(Exercise3_2.factorial(3.2))
println(Exercise3_2.factorial(9.56))
println(Exercise3_2.factorial(5.6))


object Exercise4 {

 def fibseq(n: Int): List[Int] = {
    var ret = scala.collection.mutable.ListBuffer[Int](0, 1)
    while (ret(ret.length - 1) < n) {
      val temp = ret(ret.length - 1) + ret(ret.length - 2)
      if (temp >= n) {
        return ret.toList
      }
      ret += temp
    }
    ret.toList
  }
}

Exercise4.fibseq(10)




import scala.io.StdIn._
object Exercise5 {
  def cube() = {
    println("Write a Number Then Press Enter:");  
    val a=scala.io.StdIn.readInt();
    val b = a*a*a;
    println("The Cube of Number you Entered : "+b);
  }
}

Exercise5.cube
